<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shen.mapper.ArticleMapper">
    <insert id="addNewArticle" parameterType="shen.dao.Article" useGeneratedKeys="true" keyProperty="id">
        insert into article set title=#{title},mdContent=#{mdContent},htmlContent=#{htmlContent},
        summary=#{summary},cid=#{cid},uid=#{uid},publishDate=#{publishDate},state=#{state},editTime=#{editTime};
    </insert>
    <update id="UpdateArticle" parameterType="shen.dao.Article">
        update article set  title=#{title},mdContent=#{mdContent},htmlContent=#{htmlContent},
        summary=#{summary},cid=#{cid},editTime=#{editTime}
        <if test="state==1">
            ,state=1
        </if>
        <if test="publishDate!=null">
            ,publishDate=#{publishDate}
        </if>
        where id=#{id};
    </update>

    <select id="getArticleCountByState" resultType="int">
        select count(*) from article
        <where>
            <if test="state!=-1">
                and state=#{state}
            </if>
            <if test="uid!=null">
                and uid=#{uid}
            </if>
            <if test="keywords!=null">
                and title like concat('%',#{keywords},'%')
            </if>
        </where>
    </select>
    <select id="getArticleByState" resultType="shen.dao.Article">
        select a.id,a.`title`,a.`editTime`,a.`pageView`,a.`state`,u.`nickname`,
        c.`cateName`,a.uid from article a,user
        u,category c where a.`cid`=c.`id` and a.`uid`=u.`id`
        <if test="state!=-2">
            and a.uid=#{uid}
        </if>
        <if test="state!=-1 and state!=-2">
            and a.state=#{state}
        </if>
        <if test="state==-2">
            and a.state=1
        </if>
        <if test="keywords!=null">
            and title like concat('%',#{keywords},'%')
        </if>
        order by a.editTime desc limit #{start},#{count};
    </select>

    <update id="updateArticleState" >
        update article set state=#{state} where id in
        <foreach collection="aids" item="aid" separator="," open="(" close=")">
            #{aid}
        </foreach>
    </update>

    <update id="updateArticleStateById" >
        update article set state=#{state} where id = #{articleId}
    </update>

    <delete id="deleteArticleById">
        delete from article where id in
        <foreach collection="aids" item="aid" open="(" close=")" separator=",">
        #{aid}
    </foreach>;
    </delete>

    <select id="getArticleById" parameterType="int" resultMap="BaseResultMap">
        select a.*,t.`tagName`,t.`id` as tid,u.`nickname`,c.`cateName`
        from article a left join article_tags ats on a.`id`=ats.`aid`
        left join tags t on ats.`tid`=t.`id`  left join user u ON a.`uid`=u.`id`
      left join category c on a.`cid`=c.`id` where a.id=#{aid}
    </select>

    <update id="pvIncrement" parameterType="int">
        update article set pageView = pageView + 1 where id=#{aid};
    </update>
    <!--一对一查询-->
    <resultMap id="BaseResultMap" type="shen.dao.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="cid" property="cid"/>
        <result column="uid" property="uid"/>
        <result column="publishDate" property="publishDate"/>
        <result column="editTime" property="editTime"/>
        <result column="state" property="state"/>
        <result column="pageView" property="pageView"/>
        <result column="mdContent" property="mdContent"/>
        <result column="htmlContent" property="htmlContent"/>
        <result column="summary" property="summary"/>
        <result column="nickname" property="nickname"/>
        <result column="cateName" property="cateName"/>
        <collection property="tags" ofType="shen.dao.Tags" column="tagName">
            <id property="id" column="tid"/>
            <result property="tagName" column="tagName"/>
        </collection>
    </resultMap>
    <insert id="pvStatisticsPerDay">
        insert into  pv(countDate,pv,uid) select CURRENT_DATE(),totalPv-pv,t.`uid`
         from pvview p,totalpvview t where p.`uid`=t.`uid`;
    </insert>

    <select id="getCategories" resultType="String" parameterType="int">
        select countDate from pv where uid=#{uid} order by countDate limit 7;
    </select>
    <select parameterType="long" id="getDataStatistics" resultType="int">
        select pv from pv where uid=#{uid} order by countDate limit 7;
    </select>
</mapper>